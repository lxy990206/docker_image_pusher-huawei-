name: Pull Docker Images from File and Push to Huawei SWR

# 定义触发条件
on:
  push:
    branches:
      - main
    paths:
      - 'images.txt'  # 只有当 images.txt 文件发生变化时触发工作流

jobs:
  build-and-push-docker-images:
    runs-on: ubuntu-latest

    steps:
      # 检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 读取 images.txt 文件中的镜像列表
      - name: Read images from images.txt
        id: read_images
        run: |
          # 读取 images.txt 文件内容并将其存储在 IMAGES 变量中
          IMAGES=$(cat images.txt)
          # 将 IMAGES 变量作为输出传递给后续步骤
          echo "::set-output name=images::$IMAGES"

      # 配置 Docker 使用华为云容器镜像服务 (SWR)
      - name: Configure Docker to use Huawei SWR
        run: |
          # 使用华为云访问密钥登录到华为云容器镜像服务
          echo "${{ secrets.HUAWEI_PASSWORD }}" | sudo docker login -u ${{ secrets.HUAWEI_USERNAME }} --password-stdin ${{ secrets.HUAWEI_REGISTRY }}

      # 拉取 Docker 镜像并推送到华为云容器镜像服务
      - name: Pull Docker images and push to Huawei SWR
        env:
          HUAWEI_REGISTRY: ${{ secrets.HUAWEI_REGISTRY }}
          REPOSITORY_NAME: ${{ secrets.REPOSITORY_NAME }}
        run: |
          # 遍历从 images.txt 文件中读取的每个镜像
          for IMAGE in ${IMAGES[@]}; do
            echo "Pulling image: $IMAGE"
            # 拉取 Docker 镜像
            sudo docker pull $IMAGE
            
            # 提取镜像名称和标签
            IFS=':' read -ra PARTS <<< "$IMAGE"
            BASE_IMAGE=${PARTS[0]}
            TAG=${PARTS[1]:-latest}
            
            # 标记镜像以匹配华为云容器镜像服务的命名规范
            NEW_TAG="${HUAWEI_REGISTRY}/${REPOSITORY_NAME}/${BASE_IMAGE}:${TAG}"
            echo "Tagging image as: $NEW_TAG"
            sudo docker tag $IMAGE $NEW_TAG
            
            # 推送标记后的镜像到华为云容器镜像服务
            echo "Pushing image to Huawei SWR"
            sudo docker push $NEW_TAG
          done
