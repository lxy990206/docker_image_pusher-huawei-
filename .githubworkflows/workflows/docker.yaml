name: Mirror Docker Images to Huawei SWR

on:
  workflow_dispatch:    # 手动触发
  push:
    paths:
      - 'images.txt'    # 文件变更触发

jobs:
  mirror-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to Huawei SWR (Secure)
      env:
        HW_USERNAME: ${{ secrets.HW_USERNAME }}
        HW_PASSWORD: ${{ secrets.HW_PASSWORD }}
        HW_REGISTRY: ${{ secrets.HW_REGISTRY }}  # 注意 registry 拼写一致性
      run: |
        # 安全验证环境变量
        if [[ -z "$HW_USERNAME" || -z "$HW_PASSWORD" || -z "$HW_REGISTRY" ]]; then
          echo "::error::Missing required credentials!"
          exit 1
        fi

        # 使用标准输入登录（关键修复）
        docker login -u "$HW_USERNAME" -p "$HW_PASSWORD" "$HW_REGISTRY"
          "$HW_REGISTRY" 2>&1 | tee dockerlogin.log

        # 验证登录状态
        if ! grep -q "Login Succeeded" dockerlogin.log; then
          echo "::error::Docker login failed!"
          cat dockerlogin.log
          exit 1
        fi

    - name: Mirror images
      env:
        HW_REGISTRY: ${{ secrets.HW_REGISTRY }}
        HW_NAMESPACE: ${{ secrets.HW_NAMESPACE }}
      run: |
        # 高效处理镜像列表
        grep -vE '^#|^$' images.txt | while IFS= read -r image; do
          echo "→ Processing: $image"
          
          # 安全镜像名称转换 (处理特殊字符)
          target_image=$(echo "$image" | sed -E '
            s~^[^/]+/~~;          # 删除仓库前缀
            s~:~/~g;              # 将冒号转换为路径分隔符
            s~([^/])$~\1/latest~ # 自动补全 latest 标签
          ')
          
          full_target="${HW_REGISTRY}/${HW_NAMESPACE}/${target_image}"

          # 带重试的镜像操作
          docker pull "$image"
          docker tag "$image" "$full_target"
          
          # 带失败重试的推送
          if ! docker push "$full_target"; then
            echo "Retrying push..."
            sleep 10
            docker push "$full_target" || true
          fi

          # 清理镜像
          docker rmi "$image" "$full_target" 2>/dev/null || true
        done

    - name: Cleanup
      run: |
        docker system prune -af  # 清理残余镜像
